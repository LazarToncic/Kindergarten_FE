@using Kindergarten_FE.Common.Extensions
@inject ITokenStorageService TokenStorage
@inject IUserRoleService UserRoleService
@inject IAuthStateService AuthStateService
@inject IAuthService AuthService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Kindergarten_FE</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/registration">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Registration
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/login">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Login
            </NavLink>
        </div>
        @if (ShouldShowCreateParentRequest)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/create-parent-request">
                    <span class="bi bi-person-plus-fill-nav-menu" aria-hidden="true"></span> Create Parent Request
                </NavLink>
            </div>
        }

        @if (IsLoggedIn)
        {
            <div class="nav-item px-3">
                <button class="nav-link btn btn-link" @onclick="Logout">
                    <span class="bi bi-box-arrow-right" aria-hidden="true"></span> Logout
                </button>
            </div>
        }
        
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private bool ShouldShowCreateParentRequest = false;
    private bool IsLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        AuthStateService.OnAuthStateChanged += RefreshNav;
        await RefreshNav();
    }
    
    private async Task RefreshNav()
    {
        ShouldShowCreateParentRequest = await UserRoleService.HasRoleAsync(RoleExtensions.Parent);
        IsLoggedIn = await UserRoleService.HasAnyRoleAsync();
        StateHasChanged();
    }

    public void Dispose()
    {
        AuthStateService.OnAuthStateChanged -= RefreshNav;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    
    private async Task Logout()
    {
        await AuthService.LogoutAsync();
    }

}